# Welcome to Serverless!
#
# Happy Coding!

service: awsCourse
frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8

  stage: ${opt:stage, 'dev'}
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-central-1:846728304019:table/awsCourse"
  endpointType: REGIONAL
  apiName: apiCourse-${self:provider.stage}
  apiKeys:
    - api-course-${self:provider.stage}
  usagePlan:
    quota:
      limit: 1000
      offset: 0
      period: DAY
    throttle:
      burstLimit: 200
      rateLimit: 100

functions:
  listStudents:
    handler: listStudents.handler
    events:
      - http:
          path: users
          method: get
          private: true
          cors: true
  getStudent:
    handler: getStudent.handler
    events:
      - http:
          path: users/{id}
          method: get
          private: true
          cors: true
  deleteStudent:
    handler: deleteStudent.handler
    events:
      - http:
          path: users/{id}
          method: delete
          private: true
          cors: true
  createStudent:
    handler: createStudent.handler
    events:
      - http:
          path: users
          method: post
          private: true
          cors: true
  updateStudent:
    handler: updateStudent.handler
    events:
      - http:
          path: users/{id}
          method: put
          private: true

resources:
  Resources:
    awsCourse:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: awsCourse
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
